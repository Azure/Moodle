{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "moodleCommon": {
            "metadata": {
                "description": "Common Moodle values"
            },
            "type": "object"
        }
    },
    "resources": [
        {
            "condition": "[equals(parameters('moodleCommon').customVnetId, '')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "vnetTemplate",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "moodleCommon": {
                        "value": "[parameters('moodleCommon')]"
                    }
                },
                "templateLink": {
                    "uri": "[concat(parameters('moodleCommon').baseTemplateUrl,'network-vnet.json',parameters('moodleCommon').artifactsSasToken)]"
                }
            }
        },
        {
            "apiVersion": "2018-02-01",
            "condition": "[parameters('moodleCommon').ddosSwitch]",
            "dependsOn": [
                "Microsoft.Resources/deployments/vnetTemplate"
            ],
            "name": "ddosTemplate",
            "subscriptionId": "[variables('vnetSub')]",
            "resourceGroup": "[variables('vnetRg')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "moodleCommon": {
                        "value": "[parameters('moodleCommon')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnetName')]"
                    },
                    "vNetAddressSpace": {
                        "value": "[if(equals(parameters('moodleCommon').customVnetId, ''), concat(parameters('moodleCommon').vNetAddressSpace,'/16'), reference(parameters('moodleCommon').customVnetId, '2017-10-01').addressSpace.addressPrefixes[0])]"
                    }
                },
                "templateLink": {
                    "uri": "[concat(parameters('moodleCommon').baseTemplateUrl,'network-vnet-ddos.json',parameters('moodleCommon').artifactsSasToken)]"
                }
            },
            "type": "Microsoft.Resources/deployments"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "Microsoft.Resources/deployments/vnetTemplate",
                "Microsoft.Resources/deployments/ddosTemplate"
            ],
            "name": "subnetTemplate",
            "subscriptionId": "[variables('vnetSub')]",
            "resourceGroup": "[variables('vnetRg')]",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "moodleCommon": {
                        "value": "[parameters('moodleCommon')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[concat(parameters('moodleCommon').baseTemplateUrl,'network-subnets.json',parameters('moodleCommon').artifactsSasToken)]"
                }
            }
        },
        {
            "condition": "[parameters('moodleCommon').vnetGwDeploySwitch]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('moodleCommon').location]",
            "name": "[parameters('moodleCommon').gatewayPublicIPName]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "displayName": "Virtual network gateway Public IP"
            }
        },
        {
            "condition": "[parameters('moodleCommon').vnetGwDeploySwitch]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('moodleCommon').gatewayPublicIPName)]",
                "Microsoft.Resources/deployments/subnetTemplate"
            ],
            "location": "[parameters('moodleCommon').location]",
            "name": "[parameters('moodleCommon').gatewayName]",
            "properties": {
                "activeActive": false,
                "enableBgp": false,
                "gatewayType": "[parameters('moodleCommon').gatewayType]",
                "ipConfigurations": [
                    {
                        "name": "vnet-Gateway-Config",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('moodleCommon').gatewayPublicIPName)]"
                            },
                            "subnet": {
                                "id": "[variables('subnetIdGateway')]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1",
                    "capacity": 2
                },
                "vpnType": "[parameters('moodleCommon').vpnType]"
            }
        },
        {
            "condition": "[not(equals(parameters('moodleCommon').httpsTermination, 'AppGw'))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "[parameters('moodleCommon').lbSku]"
            },
            "apiVersion": "2017-10-01",
            "location": "[parameters('moodleCommon').location]",
            "name": "[parameters('moodleCommon').lbPipName]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[parameters('moodleCommon').lbName]"
                },
                "publicIPAllocationMethod": "Static"
            },
            "tags": {
                "displayName": "Load Balancer Public IP"
            }
        },
        {
            "condition": "[equals(parameters('moodleCommon').httpsTermination, 'AppGw')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('moodleCommon').location]",
            "name": "[parameters('moodleCommon').appGwPipName]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[parameters('moodleCommon').appGwName]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "displayName": "App Gateway Public IP (must be dynamic)"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('moodleCommon').location]",
            "name": "[parameters('moodleCommon').ctlrPipName]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[parameters('moodleCommon').ctlrPipName]"
                },
                "publicIPAllocationMethod": "Static"
            },
            "tags": {
                "displayName": "Controller VM Public IP"
            }
        },
        {
            "condition": "[not(equals(parameters('moodleCommon').httpsTermination, 'AppGw'))]",
            "type": "Microsoft.Network/loadBalancers",
            "sku": {
                "name": "[parameters('moodleCommon').lbSku]"
            },
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',parameters('moodleCommon').lbPipName)]"
            ],
            "location": "[parameters('moodleCommon').location]",
            "name": "[parameters('moodleCommon').lbName]",
            "properties": {
                "backendAddressPools": [
                    {
                        "name": "[parameters('moodleCommon').extBeName ]"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[parameters('moodleCommon').extFeName ]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('lbPipID')]"
                            }
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "Http",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('extBeID')]"
                            },
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('extFeID')]"
                            },
                            "frontendPort": 80,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('extProbeHTTPID')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "Https",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('extBeID')]"
                            },
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('extFeID')]"
                            },
                            "frontendPort": 443,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('extProbeHTTPSID')]"
                            },
                            "protocol": "Tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[parameters('moodleCommon').extProbeHTTP  ]",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3,
                            "port": 80,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "[parameters('moodleCommon').extProbeHTTPS  ]",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3,
                            "port": 443,
                            "protocol": "Tcp"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('moodleCommon').httpsTermination, 'AppGw')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "Microsoft.Resources/deployments/subnetTemplate",
                "[concat('Microsoft.Network/publicIPAddresses/',parameters('moodleCommon').appGwPipName)]"
            ],
            "name": "appGwTemplate",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "moodleCommon": {
                        "value": "[parameters('moodleCommon')]"
                    },
                    "subnetIdAppGw": {
                        "value": "[variables('subnetIdAppGw')]"
                    },
                    "sslCertData": {
                        "value":"MIIJqQIBAzCCCW8GCSqGSIb3DQEHAaCCCWAEgglcMIIJWDCCBA8GCSqGSIb3DQEHBqCCBAAwggP8AgEAMIID9QYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQI8YghcNKGAg0CAggAgIIDyLlA9txoesp7kbQvh5t611CuUk0yI5g2pMvfv3s5GfnFTFWlKqO8FAFEMg6px9w4Cjj13jZd7KbP1+H4qaGbuj7lTbzMXKiuebZsFKTB/+YGPAIWxBHOaIfmZkfdYrVR73MoytonL3qB5hF3ssi9lPcj+aZ1PJrVnq+RAAJ81g9Vcg+yAo3VSh4zcv4KKs9WI2FkMd/nCwyASke7VQwa0SdyBaf4b3UisdWhT3LAf1gAVuO7LwTqiTj1PuKoHvFAkTRiAr3eUZxMS3Go9jS6oWhSNB3ze5dn7YdG801KA7Q8cLHZhMG/jRhqJTAC4OgQG6q4XOayuKYvrC4ZmdWcUz5EJiivbwYAXU9JxJri3nQ118O7mXeaHaaRDAhyhvKQ//Fsupo45KwfeUmpOPnCaWx58/cVkFYUpkvO30xW4EFaiYU5kxba32xvO2a3SOf0uQ0SiH8xpQuQxqNB1SXUKTERiFKUEm7mAH6wXVFfMw0ac/GsbGDjYI32XX6C7pDXV0H5jk3qHFYdqmWihriEhK0NJ7EnyNKM5o4bVwD38BbrJPZqgifUJMUdd8JWVpE+Y4Uz6C8KliNZHvNuE5kQvm0GJZQ2dgPBSkY9PKsNw4auhFBg+ILjqjeZG3PBeKg+10B6MF3ZinoNErwqYERqlX/JSkIVaYX8qEOmPsI31fVt473+i28UwPozar3zykz+KmDdJo5ec9n57T/fOEsTuJ4tWIhuKWQ7zBQ4oHQn2S9KDvbiX9uM1EtFMhk13w6TaEFLGUBWpI/UQKjSi0kSQZzN5UGkBRLIBKgor2fNI57jsDQVU8QgFx1ew+DWw4TKwX+FbPT719yAOTDzwRn5A3oUyiBEbSPH3qC1sVVM4sIy5rRf9hB7HH64gaMrMhq9Ql3ZrEqJLQ+RFESZl16LNjG6l+UXUGycKyUgCG3BOq3V9ipVU2+JC2bDhEcZUb1f099FWb2crWN+lPhV/ZAWxhTII4bG8cYlTx2zykMhTblbAdhFnICG32avRnLZeZjL2PhZ/XcIZiOZv7M3PBTQf55F8nJj+gO9Rs4Bn30mFtuGWQsXZ5Fr7wZs+EF1nnvFaIF1EsdGXItEzMhJvsf5e+DehZ8el2LsGFI6q/VBJdGhbwQknWblQnXGMjo8sSftgyMNl1dK31cfMI1vGKbTXZlMQgKQ3Y77PfeD1fmnlMk6gvP42LIAwSxMbV/E/I0paqlDlg/B3AJxf8+gaXhabc1rVReGsWCBvLHi/IHpqgLwNi/JhDatDm0XDPnp2woy825kr6cEIc0OMIIFQQYJKoZIhvcNAQcBoIIFMgSCBS4wggUqMIIFJgYLKoZIhvcNAQwKAQKgggTuMIIE6jAcBgoqhkiG9w0BDAEDMA4ECKOBLc6TjTP2AgIIAASCBMj3Bti9O/h+EwrkAvZHsvjbhNTHBGvdJRQPGIYWeHSNTbpaNvhZOdHjh0I/zCJfNJkuZtl/bFYXd1YAss7hV7PFb8YsGO7RK/hqnGYbkhMVhJaxIMKfUye2iv6ifhfGh0NmMT8/EFCJXgT3nceqLEx4ozD2u+XSuUO/e62HSLIar14vO0bJtfqRLc9OjBcUCHcpeXlw8Lm7JZ/YKVUKgwtFjrLp4RLY3qt5jnqzmflY1WrAem0n9uMmmuJkFwc+cj0dV9kY+qP7Pp3+hS0z9yOGTWRSi9nGBYFxvnF0WDpwdR5ULtDnd5zR98xxjoRvLl08c73vKGl3e7oNxKRhHCCRGvRg1JcB3Dvzy5a2JYodmcoVE0Inpj1LHH6zhIpAoH5bF+tu8/ZBn+rfzlCJBtEF43X/Uf/HIGcrdSLiAezanvMp+4eu5nIVpnw1Ao/QReJlHb03nsyF6PL6PJo1oX5inh/yAZKDs0Wr3B+tZYmdVvrFPyt6Qyljwgph2YQJ9r0HLz1XKhChFB446O1KWp8pdaPDkBjcBHal6WDwMm1mF4Bt1OcIbsTPjasE6ULo1dtbkJGxhVXaMFBo7Zgo8cEDdHbhudOg1KpGlM9UMlCI7EhPdeX+ybo2D18RtsV9pmFveSwq1mRxuFOH7j1mPzxvvc+F4c8/qCTx9B2nb+x+pQMGrJKSh7bnqE2DrBH7PmHqceD60CqR1W5qsPc1g4GAhtR3tH867Og/O4+9rw9Wc/+IKgN3YiOP0nMBIjqdnkFdOxijUsLIzl0C/rjV0q0WzjPmDU4h0sRJKaPFblezLiyE0xYo6aJFt1eBLVx6tkESiBf4DnVJiOWazm4h/B2v56HC5v+uJYmzel3w/Xrtwni7L7D/C3QlovmAK8lHqn5arfNkn2aEC2Xp0TwXqu59NhFL7GigYuDnWVp3MgbcoBs8nv1GGmIT3PjSZl8YqiMTNm86zr4nrAsbaZnJIss7mXVMNNiwFFMr3FaaLwbayg9FMbYeAjtlvS6hoyeQTzrtkO9Wvpy8zRlosId8pCGDfPvISWFo61jdserd4Ok+OuasjRLj6FdXlVzgb17Kg8EP02NI+XxijpNiAgELAIWr3K4aEKV3bjcwzEjT70zFqt3A6QFvSq5KXU4Z7J8YU+z5MGkQmaSk/ES4CToqsw1CYxo3/DNdnuHq2YtkIqMuO3knO+yyTKTnRWjaq1J4A74hGfF8ebeVij8HvLaoxWva0YMPwcQ8MG2o7ahZuPr7BUhRuwwp0dGza+Hpj7nm3d28qekOAKAIvIbNaoGFT2KZvIvKaZJlV6aXyO6v3T6HSGB9V9b5kl8XEc/r+Vz0O9FmS7vU785Lr1H8B1Tck84LL5qvH5j5xtaNuuX0Re3QWh2AZwRzYBGBB8ESlm36ZjEk7wCEMPZvjzEBj3WziyIQE9iehJt6CNjP0Gog7Us83DJT1/6LvaZtJHtY5TLk9ZbCmcH1OwhvwoJ8TkeTG9RTOt0BUyWvLkE5CrJJu6ONXm8JdrkkTbcFN9NlE/zO4lK6vuP2BXcWGFGt3IKe+3ZhK91AC1xKMX6c9g/kWILLi8RFnkYZFramhhW0sdp9YB5JlDEGADC1uqxsPDAGgyE1age2NFJd0kYxJTAjBgkqhkiG9w0BCRUxFgQUz7QKW0MUN0DggVujbODK48N2vtcwMTAhMAkGBSsOAwIaBQAEFGeus2X6eMXVPu6r+nbET99oJ8hVBAh+ZDsUTG6CdwICCAA="
                    }
                },
                "templateLink": {
                    "uri": "[concat(parameters('moodleCommon').baseTemplateUrl,'appgw.json',parameters('moodleCommon').artifactsSasToken)]"
                }
            }
        }
    ],
    "variables": {
        "documentation01": "This sub-template creates a virtual network with a number of subnets and then creates the moodle load-balancer (or an Azure Application Gateway) with public IP/dns",
        "extBeID": "[concat(variables('extLbID'),'/backendAddressPools/',parameters('moodleCommon').extBeName)]",
        "extFeID": "[concat(variables('extLbID'),'/frontendIPConfigurations/',parameters('moodleCommon').extFeName)]",
        "extLbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('moodleCommon').lbName)]",
        "extProbeHTTPID": "[concat(variables('extLbID'),'/probes/',parameters('moodleCommon').extProbeHTTP)]",
        "extProbeHTTPSID": "[concat(variables('extLbID'),'/probes/',parameters('moodleCommon').extProbeHTTPS)]",
        "lbPipID": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('moodleCommon').lbPipName)]",
        "ctlrPipID": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('moodleCommon').ctlrPipName)]",
        "customVnetIdArr":              "[split(parameters('moodleCommon').customVnetId, '/')]",
        "vnetSub":                      "[if(equals(parameters('moodleCommon').customVnetId, ''), subscription().subscriptionId, variables('customVnetIdArr')[2])]",
        "vnetRg":                       "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceGroup().name, variables('customVnetIdArr')[4])]",
        "vnetName":                     "[if(equals(parameters('moodleCommon').customVnetId, ''), parameters('moodleCommon').vnetName, variables('customVnetIdArr')[8])]",
        "customVnetSubnetIdWeb":        "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetWeb)]",
        "customVnetSubnetIdSan":        "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetSan)]",
        "customVnetSubnetIdRedis":      "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetRedis)]",
        "customVnetSubnetIdElastic":    "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetElastic)]",
        "customVnetSubnetIdTika":       "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetTika)]",
        "customVnetSubnetIdGateway":    "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetGateway)]",
        "customVnetSubnetIdAppGw":      "[concat(parameters('moodleCommon').customVnetId, '/subnets/', parameters('moodleCommon').subnetAppGw)]",
        "subnetIdWeb":      "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetWeb), variables('customVnetSubnetIdWeb'))]",
        "subnetIdSan":      "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetSan), variables('customVnetSubnetIdSan'))]",
        "subnetIdRedis":    "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetRedis), variables('customVnetSubnetIdRedis'))]",
        "subnetIdElastic":  "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetElastic), variables('customVnetSubnetIdElastic'))]",
        "subnetIdTika":     "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetTika), variables('customVnetSubnetIdTika'))]",
        "subnetIdGateway":  "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetGateway), variables('customVnetSubnetIdGateway'))]",
        "subnetIdAppGw":    "[if(equals(parameters('moodleCommon').customVnetId, ''), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('moodleCommon').subnetAppGw), variables('customVnetSubnetIdAppGw'))]"
    },
    "outputs": {
        "lbPubIp": {
            "value": "[if(equals(parameters('moodleCommon').httpsTermination, 'AppGw'), '0.0.0.0', reference(parameters('moodleCommon').lbPipName, '2017-10-01').ipAddress)]",
            "type": "string"
        },
        "ctlrPubIp": {
            "value": "[reference(parameters('moodleCommon').ctlrPipName, '2017-10-01').ipAddress]",
            "type": "string"
        },
        "ctlrPubIpId": {
            "value": "[variables('ctlrPipID')]",
            "type": "string"
        },
        "subnetIdWeb": {
            "value": "[variables('subnetIdWeb')]",
            "type": "string"
        },
        "subnetIdSan": {
            "value": "[variables('subnetIdSan')]",
            "type": "string"
        },
        "subnetIdRedis": {
            "value": "[variables('subnetIdRedis')]",
            "type": "string"
        },
        "subnetIdElastic": {
            "value": "[variables('subnetIdElastic')]",
            "type": "string"
        },
        "subnetIdTika": {
            "value": "[variables('subnetIdTika')]",
            "type": "string"
        }
    }
}
